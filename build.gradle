plugins {
    id 'signing'
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '1.4.32'
    id 'net.minecrell.licenser' version '0.4.1'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding 'UTF-8'

group 'me.dkim19375'
version '2.9.1'

//noinspection GrUnresolvedAccess
compileKotlin.kotlinOptions {
    languageVersion = "1.5"
    jvmTarget = '1.8'
}

compileTestKotlin.kotlinOptions {
    languageVersion = "1.5"
    jvmTarget = '1.8'
}

license {
    header = rootProject.file("LICENSE")
    include "**/*.kt"
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://m2.dv8tion.net/releases' }
    maven { url = 'https://repo.mattstudios.me/artifactory/public' }
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/releases/' }
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compileOnly 'net.dv8tion:JDA:4.2.1_262'
    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.10'
    api 'commons-io:commons-io:2.8.0'
    api 'org.apache.commons:commons-lang3:3.12.0'
    api 'com.github.minndevelopment:jda-ktx:0.4.0'
    api 'me.mattstudios:triumph-config:1.0.5-SNAPSHOT'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.5.0'
    api 'io.github.dkim19375:dkimcore:1.0.2'
    api 'org.codehaus.groovy:groovy-jsr223:3.0.8'

    testImplementation 'net.dv8tion:JDA:4.2.1_262'
    testImplementation 'commons-io:commons-io:2.8.0'
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'com.github.minndevelopment:jda-ktx:0.4.0'
    testImplementation 'me.mattstudios:triumph-config:1.0.5-SNAPSHOT'

    // testing libs
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar) {
    from dokkaJavadoc
    classifier 'javadoc'
}

publishing {
    repositories {
/*        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = releasesRepoUrl

            credentials {
                it.username mavenUsername
                it.password mavenPassword
            }
        }*/
    }

    def project = project
    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            //noinspection GroovyAssignabilityCheck
            groupId 'io.github.dkim19375'
            //noinspection GroovyAssignabilityCheck
            artifactId 'dkim19375jdautils'
            version project.version

            //noinspection GroovyAssignabilityCheck
            from components.kotlin
            //noinspection GroovyAssignabilityCheck
            artifact sourcesJar
            //noinspection GroovyAssignabilityCheck
            artifact javadocJar

            pom {
                //noinspection GroovyAssignabilityCheck
                name = 'dkim19375JDAUtils'
                //noinspection GroovyAssignabilityCheck
                description = 'A kotlin library used to help JDA developers make bots either!'
                //noinspection GroovyAssignabilityCheck
                url = 'https://github.com/dkim19375/dkim19375JDAUtils'

                //noinspection GroovyAssignabilityCheck
                packaging = 'jar'

                licenses {
                    license {
                        //noinspection GroovyAssignabilityCheck
                        name = 'MIT License'
                        //noinspection GroovyAssignabilityCheck
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        //noinspection GroovyAssignabilityCheck
                        id = 'dkim19375'
                    }
                }

                scm {
                    //noinspection GroovyAssignabilityCheck
                    connection = 'scm:git:git://github.com/dkim19375/dkim19375JDAUtils.git'
                    //noinspection GroovyAssignabilityCheck
                    developerConnection = 'scm:git:ssh://github.com:dkim19375/dkim19375JDAUtils.git'
                    //noinspection GroovyAssignabilityCheck
                    url = 'https://github.com/dkim19375/dkim19375JDAUtils'
                }
            }
        }
    }
}

nexusPublishing {
    packageGroup.set("io.github.dkim19375")
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = project.findProperty("mavenUsername")
            password = project.findProperty("mavenPassword")
        }
    }
}

signing {
/*    def keyId = findProperty("signingKeyId")
    def key = findProperty("signingKey")
    def pass = findProperty("signingPassword")
    useInMemoryPgpKeys(keyId, key, pass)*/
    sign publishing.publications.mavenJava
}

tasks.jar.dependsOn licenseFormat